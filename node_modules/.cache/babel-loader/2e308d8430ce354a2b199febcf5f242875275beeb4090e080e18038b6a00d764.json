{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taftj\\\\OneDrive\\\\Desktop\\\\cs260\\\\cs260startup\\\\src\\\\createapost\\\\createapost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ImageUpload from './imageupload';\nimport LocationInfo from './locationinfo';\nimport FishingRodSelection from './fishingrodselection';\nimport BaitSelection from './baitselection';\nimport './createapost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CreatePost({\n  onAddPost\n}) {\n  _s();\n  const [imageUrl, setImage] = useState(null);\n  const [location, setLocation] = useState('');\n  const [rodType, setRodType] = useState('');\n  const [rodBrand, setRodBrand] = useState('');\n  const [baitType, setBaitType] = useState('');\n  const [baitColor, setBaitColor] = useState('');\n  const [caption, setCaption] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const newPost = {\n      imageUrl,\n      location,\n      rodType,\n      rodBrand,\n      baitType,\n      baitColor,\n      caption,\n      time: new Date().toLocaleString()\n    };\n    try {\n      const response = await fetch('/api/posts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newPost)\n      });\n      if (response.ok) {\n        const savedPost = await response.json();\n        onAddPost(savedPost);\n      }\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n    setImage(null);\n    setLocation('');\n    setRodType('');\n    setRodBrand('');\n    setBaitType('');\n    setBaitColor('');\n    setCaption('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(ImageUpload, {\n        onImageChange: setImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LocationInfo, {\n        onLocationChange: setLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FishingRodSelection, {\n        onRodTypeChange: setRodType,\n        onRodBrandChange: setRodBrand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BaitSelection, {\n        onBaitTypeChange: setBaitType,\n        onBaitColorChange: setBaitColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Caption:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: caption,\n          onChange: e => setCaption(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(CreatePost, \"0uxyTR72Ok/XXXeY7td5GgLiLsY=\");\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","ImageUpload","LocationInfo","FishingRodSelection","BaitSelection","jsxDEV","_jsxDEV","CreatePost","onAddPost","_s","imageUrl","setImage","location","setLocation","rodType","setRodType","rodBrand","setRodBrand","baitType","setBaitType","baitColor","setBaitColor","caption","setCaption","handleSubmit","event","preventDefault","newPost","time","Date","toLocaleString","response","fetch","method","headers","body","JSON","stringify","ok","savedPost","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","encType","onImageChange","onLocationChange","onRodTypeChange","onRodBrandChange","onBaitTypeChange","onBaitColorChange","value","onChange","e","target","required","type","_c","$RefreshReg$"],"sources":["C:/Users/taftj/OneDrive/Desktop/cs260/cs260startup/src/createapost/createapost.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ImageUpload from './imageupload';\r\nimport LocationInfo from './locationinfo';\r\nimport FishingRodSelection from './fishingrodselection';\r\nimport BaitSelection from './baitselection';\r\nimport './createapost.css';\r\n\r\nexport function CreatePost({ onAddPost }) {\r\n    const [imageUrl, setImage] = useState(null);\r\n    const [location, setLocation] = useState('');\r\n    const [rodType, setRodType] = useState('');\r\n    const [rodBrand, setRodBrand] = useState('');\r\n    const [baitType, setBaitType] = useState('');\r\n    const [baitColor, setBaitColor] = useState('');\r\n    const [caption, setCaption] = useState('');\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const newPost = { imageUrl, location, rodType, rodBrand, baitType, baitColor, caption, time: new Date().toLocaleString() };\r\n        \r\n        try {\r\n            const response = await fetch('/api/posts', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(newPost),\r\n            });\r\n    \r\n            if (response.ok) {\r\n                const savedPost = await response.json();\r\n                onAddPost(savedPost);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error creating post:\", error);\r\n        }\r\n\r\n        setImage(null);\r\n        setLocation('');\r\n        setRodType('');\r\n        setRodBrand('');\r\n        setBaitType('');\r\n        setBaitColor('');\r\n        setCaption('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"create-post\">\r\n            <h1>Create a New Post</h1>\r\n            <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n                <ImageUpload onImageChange={setImage} />\r\n                <LocationInfo onLocationChange={setLocation} />\r\n                <FishingRodSelection onRodTypeChange={setRodType} onRodBrandChange={setRodBrand} />\r\n                <BaitSelection onBaitTypeChange={setBaitType} onBaitColorChange={setBaitColor} />\r\n                <label>\r\n                    Caption:\r\n                    <textarea value={caption} onChange={(e) => setCaption(e.target.value)} required />\r\n                </label>\r\n                <button type=\"submit\">Create Post</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatePost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}